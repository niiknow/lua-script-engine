proxy_cache_path /tmp/nginx/cache levels=1:2 keys_zone=githubraw:10m max_size=1g inactive=45m use_temp_path=off;
proxy_cache_path /tmp/nginx/cache levels=1:2 keys_zone=codestorage:10m max_size=1g inactive=45m;

server {
  listen 80 default_server;
  listen [::]:80 default_server;

  server_name                      _;
  root                             /usr/local/openresty/nginx/html;
  index                            index.html index.htm;

  proxy_ignore_headers             Vary Expires Set-Cookie Cache-Control;
  proxy_pass_header                P3P;
  proxy_cache_min_uses             2;

  location / {
    default_type                   text/plain;
    content_by_lua '
      local router = require "sngin.router"
      router.init()
    ';
  }

  location /__githubraw {
    internal;
    set                            $clean_url "";
    set_unescape_uri               $clean_url $arg_url;

    proxy_cache                    githubraw;
    proxy_pass                     $clean_url;
    proxy_cache_key                $clean_url$slice_range;
    include                        proxy-hide-headers.common;

    # small cache to help prevent hammering of backend
    proxy_cache_valid              any 10s;

    # only allow GET method
    proxy_method                   GET;

  }

  # proxy pass to s3 for code
  # keep this separate from githubraw for security purpose
  location /__code {
   internal;
    set                            $clean_url "";
    set_unescape_uri               $clean_url $arg_url;

    proxy_cache                    codestorage;
    proxy_pass                     $clean_url;
    proxy_cache_key                $clean_url$slice_range;
    include                        proxy-hide-headers.common;

    # small cache to help prevent hammering of backend
    proxy_cache_valid              200 304 10m;
    proxy_cache_valid              403 404 500 10s;

    # only allow GET method
    proxy_method                   GET;
  }

  location /__purge/(.*) {
    content_by_lua '
      local router = require "sngin.router"
      router.purge()
    ';
  }

  # for logging setup
  location /__log {
    internal;
    # logly perhap? or azure table storage for cheaper logging
  }

  # for making smtp call
  location /__smtp {
    internal;
  }

  # for email notification
  location /__notify_email {
    internal;
  }

  # for sms notification
  location /__notify_sms {
    internal;
  }
}